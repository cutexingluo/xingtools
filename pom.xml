<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>top.cutexingluo.tools</groupId>
    <artifactId>xingtools-parent</artifactId>
    <version>1.1.4</version>
    <name>xingtools</name>
    <description>xingtools 是一个Java工具 sdk 库，通过提供许多方法，降低相关API的学习成本，提高工作效率。
        please don't use it for project, please use xingtools-spring-boot-starter for your own project.
    </description>

    <modules>
        <module>xingtools-core</module>
        <module>xingtools-web</module>
        <module>xingtools-extra</module>
        <module>xingtools-mvc</module>
        <module>xingtools-db</module>
        <module>xingtools-pkg</module>
        <module>xingtools-log</module>
        <module>xingtools-cloud</module>
        <module>xingtools-aop</module>
        <module>xingtools-unified</module>
        <module>xingtools-spring-boot</module>
        <module>xingtools-spring-boot-autoconfigure</module>
        <module>xingtools-spring-boot-starter</module>
    </modules>


    <properties>
        <projectUrl>https://gitee.com/SangonomiyaKokomi/xingtools.git</projectUrl>
        <serverId>ossrh</serverId><!-- 服务id 也就是setting.xml中的servers.server.id -->
        <releaseId>release</releaseId>

        <!--        versions -->
        <compile.version>8</compile.version>
        <lombok.version>1.18.30</lombok.version>
        <jetbrains.annotations.version>1.7.0</jetbrains.annotations.version>

        <hutool.version>5.8.26</hutool.version>
        <spring-boot.version>2.7.18</spring-boot.version>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.5.0</spring-cloud-alibaba.version>
        <spring-cloud-other.version>2.2.5.RELEASE</spring-cloud-other.version>


        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <jakarta.servlet-api.version>6.0.0</jakarta.servlet-api.version>

        <aspectj.version>1.9.7</aspectj.version>
        <redisson.version>3.24.3</redisson.version>

        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <lock4j.version>2.2.5</lock4j.version>

        <guava.version>16.0</guava.version>
    </properties>


    <!-- 依赖管理    -->
    <dependencyManagement>
        <dependencies>
            <!-- 注解 -->
            <dependency>
                <groupId>org.realityforge.org.jetbrains.annotations</groupId>
                <artifactId>org.jetbrains.annotations</artifactId>
                <version>${jetbrains.annotations.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta.servlet-api.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>


            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>lock4j-core</artifactId>
                <version>${lock4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-core</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>


            <!--            guava -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-security-dependencies</artifactId>
                <version>${spring-cloud-other.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-oauth2</artifactId>
                <version>${spring-cloud-other.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!--填入开发者信息，姓名、邮箱、项目地址-->
    <developers>
        <developer>
            <name>XingTian</name>
            <email>2516633174@qq.com</email>
            <url>${projectUrl}</url>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <!--以下部分内容不需要修改，直接复制咱贴即可-->
    <url>${projectUrl}</url>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo,manual</distribution>
        </license>
    </licenses>
    <scm>
        <!-- 采用projectUrl变量代替这个值，方便给重复利用这个配置，也就是上面的标签替换一下值就行 -->
        <connection>${projectUrl}</connection>
        <developerConnection>${projectUrl}</developerConnection>
        <url>${projectUrl}</url>
    </scm>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.9.0</version>
                <configuration>
                    <source>${compile.version}</source>
                    <target>${compile.version}</target>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Build-OS>${os.name}</Build-OS>
                            <Built-By>${user.name}</Built-By>
                            <Build-Jdk>${java.version}</Build-Jdk>
                            <Build-Timestamp>${maven.build.timestamp}</Build-Timestamp>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>javadoc</id>
            <build>
                <plugins>
                    <!-- Javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.5.0</version>
                        <configuration>
                            <!-- 忽略生成文档中的错误，如果想看下控制台中关于生成doc错误的去掉这个参数 -->
                            <doclint>none</doclint>  <!-- Turnoff all checks -->
                            <charset>UTF-8</charset><!-- utf-8读取文件 -->
                            <encoding>UTF-8</encoding><!-- utf-8进行编码代码 -->
                            <docencoding>UTF-8</docencoding><!-- utf-8进行编码文档 -->
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>source</id>
            <build>
                <plugins>
                    <!-- Source -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>oss</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release-maven</id>
            <distributionManagement>
                <snapshotRepository>
                    <!--这个id和settings.xml中servers.server.id要相同，因为上传jar需要登录才有权限-->
                    <id>${serverId}</id>
                    <name>OSS Snapshots Repository</name>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <repository>
                    <!--这个id和settings.xml中servers.server.id要相同，因为上传jar需要登录才有权限-->
                    <id>${serverId}</id>
                    <name>OSS Staging Repository</name>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
            <build>
                <plugins>
                    <!--公钥私钥插件，也就是上传需要进行验证用户名和密码过程中需要用到的插件-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--正式版部署插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                        <version>3.0.1</version>
                        <configuration>
                            <autoVersionSubmodules>true</autoVersionSubmodules>
                            <useReleaseProfile>false</useReleaseProfile>
                            <releaseProfiles>${releaseId}</releaseProfiles>
                            <goals>deploy</goals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
